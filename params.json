{"name":"Hybrid.js","tagline":"hybrid.js","body":"hybrid.js\r\n=========\r\n**by sinan eker**\r\n\r\n\r\n**hybrid.js** is a MooTools and jQuery composer. \r\nYou can call jQuery function in interaction with MooTools OOP coding. \r\nAdditionally there is a plugin for twitter's bootstrap and RequireJS. That means you can use a few libs handled from one MooTools Class.\r\nAlso it's possible to get the result of the last called action.\r\nThat is useful for AJAX requests oder DOM manipulation. There is a small datepicker migration for bootstrap. (For further information about datepicker: http://www.eyecon.ro/bootstrap-datepicker/) \r\n\r\nSome links:\r\n* [Bootstrap](http://twitter.github.com/bootstrap/base)\r\n* [RequireJS](http://requirejs.org/)\r\n\r\nUsage\r\n=====\r\n\r\n**before you read on!**\r\n***\r\nTo use hybrid.js you nee MooTools and jQuery included to your page.\r\n* [MooTools download site](http://mootools.net/download)\r\n* [jQuery site](https://jquery.com/)\r\n\r\n***\r\nInstallation\r\n============\r\n\r\nDownload the source. For production I would use _.min.js. The file is compressed and has everything in it.\r\nFor just using the default hybrid.js I also would use the compressed hybrid.min.js file.\r\n***\r\n\r\nA code example: \r\n```javascript\r\nvar app = new _('body',function(t, $){\r\n  // $ is jQuery\r\n  // t is the element | similary to $(this)\r\n  $(t).text('Hello World!');  \r\n});\r\n```\r\n\r\nAnd with an ajax request:\r\n```javascript\r\nvar res = app.ajax({\r\n    url: '/echo/json/',\r\n    dataType: 'json',\r\n    type:'POST',\r\n    data: {\r\n        json: JSON.encode({\r\n            text: 'some text',\r\n            array: [1, 2, 'three'],\r\n            object: {\r\n                par1: 'another text',\r\n                par2: [3, 2, 'one'],\r\n                par3: {}\r\n            }\r\n        })\r\n    },\r\n    cache:false,\r\n    beforeSend: function () {\r\n        new _('#state', function (t, $) {\r\n            $(t).text('start');\r\n        });\r\n    },\r\n    complete: function (state) {\r\n        new _('#state', function (t, $) {\r\n            $(t).text(state.status+\" \"+state.statusText+\"\\n\");\r\n            $('#response').text(\"Response: \\n\"+state.responseText);\r\n        });\r\n    }\r\n});\r\n```\r\n\r\njQuery MooTools Mutator:\r\n\r\n```javascript\r\nnew Class({\r\n  jQuery:'the_name', // this class is now in jQuery.fn.the_name\r\n  someFunction:function(){\r\n    return this;\r\n  }\r\n});\r\n```\r\n***\r\n\r\n###Main methods:\r\n\r\n```javascript\r\n_.$(a) // same as jQuery()\r\n\r\n_.ajax(a) // executes a jQuery.ajax request\r\n\r\n_.initialize(a, b, options) // initialize hybrid.js \r\n\r\n_.parent(jQuery) // Not so important.\r\n```\r\n\r\nInherited from Options:\r\n```javascript\r\n_.setOptions(options) // sets the options\r\n```\r\n\r\nInherited from hybrid.Factory:\r\n```javascript\r\n_.clear() // Clears the factory store\r\n\r\n_.get(k) // Get a value by a key\r\n\r\n_.getLast() // Get the last result of an function execution\r\n\r\n_.store(t, k) // Stores a result of an function execution\r\n```\r\n\r\n###Bulding a plugin:\r\n\r\nA color changer example:\r\n\r\n```javascript\r\nvar colorChanger = (function() {\r\n  var private_store = {\r\n    __proto__: null,\r\n    defaultColor: 'red'\r\n  };\r\n  return new Class({\r\n    Extends: _, // hybrid\r\n    Implements: Options, \r\n    jQuery: 'colorChanger', // register to jquery namespace @see jQuery MooTools Mutator\r\n    options: {\r\n      backgroundColor: private_store.defaultColor // default text color\r\n    },\r\n    initialize: function(ele,options,clb){\r\n      this.setOptions(options);\r\n      this.parent(ele);\r\n      return clb.apply(this, [this.options,this.get('initialize')]); // would return the jQuery object from ele.\r\n    }\r\n  }).extend({\r\n    staticMethod: function (){ // a static methode. colorChanger.staticMethod() // return true\r\n      return true;\r\n    }\r\n  });\r\n})();\r\nwindow.colorChanger = colorChanger;\r\n\r\n// Test:\r\n\r\nvar instance = new colorChanger('body',{\r\n  backgroundColor: '#99aa99'.hexToRgb() // mootools hexToRgb\r\n},function (options,ele){\r\n  return ele.css({\r\n    'background-color': options.backgroundColor\r\n  });\r\n});\r\n\r\n```\r\n\r\n###Error handling:\r\n\r\n* Errors will catched and displayed in the js console. \r\n\r\n###Bugs?\r\n\r\n* Please report bugs to me here on github. Sorry for my strange english, but I'm only 15 years old and from germany :D\r\n\r\n###License:\r\n\r\n   > Copyright 2013 sinan eker\r\n\r\n   > Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n   > [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n   > Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}